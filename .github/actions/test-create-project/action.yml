name: 'Create project'
description: 'Runs create-node-project and performs tests'
inputs:
  options:
    description: 'create-node-app options'
    required: true
  dbConnection:
    description: 'DB_CONNECTION_STRING env var'
    default: 'postgresql://postgres:postgres@localhost:5432/postgres'
runs:
  using: 'composite'
  steps:
    - name: Checkout
      uses: actions/checkout@v3

    - name: Cache dependencies
      uses: actions/cache@v3
      with:
        path: ~/.npm
        key: npm-${{ hashFiles('package-lock.json') }}
        restore-keys: npm-

    - name: Install dependencies
      run: npm ci --ignore-scripts
      shell: bash

    - name: Build the project
      run: npm run build
      shell: bash

    - name: Run npm link
      run: npm link
      shell: bash

    - name: Create project
      run: create-node-app ${{ inputs.options }}
      shell: bash

    - name: Build created project
      working-directory: ./node-app
      run: npm run build
      shell: bash

    - name: Run lint
      working-directory: ./node-app
      run: npm run ci-lint
      shell: bash

    - name: Run tests
      working-directory: ./node-app
      run: npm run ci-test
      shell: bash
      env:
        DB_CONNECTION_STRING: ${{inputs.dbConnection}}

    - name: Run start
      if: ${{ !contains(inputs.options, '--api none') }}
      working-directory: ./node-app
      run: |
        npm run start &
        start_pid=$!
        sleep 10
        kill $start_pid
      shell: bash
      env:
        DB_CONNECTION_STRING: ${{inputs.dbConnection}}

    - name: Run start
      if: ${{ contains(inputs.options, '--api none') }}
      working-directory: ./node-app
      shell: bash
      run: npm run start
      env:
        DB_CONNECTION_STRING: ${{inputs.dbConnection}}
